<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-4.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- Namespaces탭: security 체크후 선택 > 오른쪽 5.7버전 선택(default) -->
	<security:http pattern="/resources/**" security="none" />
	<security:http pattern="/common/**" security="none" />
	
	<security:http auto-config="true" use-expressions="true" create-session="never">
	
		<!-- 관리자 권한 영역 : 상품관리 -->
		<security:intercept-url pattern="/**.pd" access="hasRole('ROLE_ADMIN')" />
		
		<!-- 권한에 상관없이 접속 가능 영역(guest도 접속 가능) -->
		<security:intercept-url pattern="/**.do" access="permitAll" />
		
		<!-- 로그인한 사용자 영역(customer + admin)  :id가 pk이므로 hasRole을 주면 admin권한 또는 user 권한 1개밖에 부여할 수 없다. 따라서 hasAnyRole을 주면 권한 여러개 가능-->
		<security:intercept-url pattern="/**.bo" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER')" />
		
		<!-- 로그인폼 -->
		<security:form-login login-page="/login.do"
						login-processing-url="/loginAction.do" 
						authentication-success-handler-ref="userLoginSuccessHandler"
						authentication-failure-handler-ref="userLoginFailureHanler"
						username-parameter="id" password-parameter="password" />
		
		<!-- 같은 브라우저에서 여러창 동시접속수 / 세션만료시 이동할 주소 / 최대 세션 초과시 에러 옵션-->
		<security:session-management>
			<security:concurrency-control max-sessions="2"
				expired-url="/login.do"
				error-if-maximum-exceeded="true"
			/>
		</security:session-management>
		
		<!-- 접근 권한이 없는 경우 작동 -->
		<security:access-denied-handler ref="userDeniedHandler"/>
	</security:http>
	
	<!-- 로그인 성공시 작동 -->
	<bean id="userLoginSuccessHandler" class="spring.mvc.pj_126_chs.service.security.UserLoginSuccessHandler">
		 <constructor-arg name="sqlSession" ref="sqlSession" />  <!-- 매개변수 생성자 만들기 전에 이문자 추가하면 오류 -->
	</bean>
	
	<!-- 로그인 실패시 작동 -->
	<bean id="userLoginFailureHanler" class="spring.mvc.pj_126_chs.service.security.UserLoginFailureHandler">
		<constructor-arg name="sqlSession" ref="sqlSession" />  <!-- dataSource-config.xml의 sqlSession 참조 -->
		<constructor-arg name="passwordEncoder" ref="bCryptPasswordEncoder"/> 
	</bean>
	
	<!-- 접근 권한이 없는 경우 작동 -->
	<bean id="userDeniedHandler" class="spring.mvc.pj_126_chs.service.security.UserDeniedHandler" />
	
	<!-- 로그인 인증처리 클래스: 비밀번호인증, 로그인 성공, 실패, 권한없음을 판단 -->
	<!-- userService는 login-processing-url="/loginAction.do"에 의해 자동호출되므로 우리가 만든 loginAction.do는 주석처리 -->
	<bean id="userService" class="spring.mvc.pj_126_chs.service.security.UserAuthenticationService">
		<constructor-arg name="sqlSession" ref="sqlSession" />
	</bean>
	
	<!-- 비밀번호 암호화 클래스 -->
	<bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	
	</bean>
	

</beans>
