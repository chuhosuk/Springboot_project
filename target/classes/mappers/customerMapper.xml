<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
     PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
     
<mapper namespace="spring.mvc.pj_126_chs.dao.CustomerDAO">   <!-- namespace="패키지명.인터페이스" -->

   <!-- 시큐리티 - 로그인 인증시 호출 -->
   <!-- UserAuthenticationService - loadUserByUsername(String id) 에서 호출 -->
   <select id="selectCustomer" parameterType="String" resultType="spring.mvc.pj_126_chs.dto.CustomerDTO">
      SELECT * FROM mvc_customer_tbl WHERE id=#{id}
   </select>
   
   <!-- 시큐리티 - 로그인 성공시 UserLoginSuccessHandler에서 호출 -->
   <select id="authorityCheck" parameterType="String" resultType="String">
      SELECT authority FROM mvc_customer_tbl WHERE id=#{id}
   </select>
   
   <!-- 시큐리티 - 로그인 실패시 UserLoginFailureHandler에서 호출 -->
   <select id="passwordCheck" parameterType="String" resultType="String">
      SELECT password FROM mvc_customer_tbl WHERE id=#{id}
   </select>

   <!-- ID 중복확인 처리 --> <!-- 시큐리티 -->
   <select id="idCheck" parameterType="String" resultType="int">
      SELECT COUNT(*) FROM mvc_customer_tbl WHERE id=#{strId}
   </select>
   
   <!-- 회원가입처리 --> <!-- 시큐리티 : key 컬럼 추가 -->
   <insert id="insertCustomer" parameterType="spring.mvc.pj_126_chs.dto.CustomerDTO">
      INSERT INTO mvc_customer_tbl(id, password, name, birthday, address, hp, email, regDate, key)
      VALUES(#{id}, #{password}, #{name}, #{birthday}, #{address}, #{hp}, #{email}, #{regDate}, #{key})
   </insert>
   
   <!-- 시큐리티 - 가입성공시 이메일인증을 위한 이메일 전송 -->
   
   <!-- 시큐리티 - 로그인 전 이메일 인증을 해야 한다. -->
   <select id="selectKey" parameterType="String" resultType="int">
      SELECT COUNT(*) FROM mvc_customer_tbl WHERE key=#{key}
   </select>
   
   <!-- 시큐리티 - 등급 변경 -->
   <update id="updateGrade" parameterType="String">
      UPDATE mvc_customer_tbl
         SET enabled=1
       WHERE key=#{key}
   </update>
   
   <!-- 시큐리티에서 selectCustomer로 로그인처리하므로 사용안함 -->
   <!-- 로그인 처리, 회원정보 인증(수정, 탈퇴) -->
   <select id="idPasswordChk" parameterType="java.util.Map" resultType="int">
      SELECT COUNT(*) FROM mvc_customer_tbl 
      WHERE id=#{strId} AND password=#{strPassword}
   </select> 

   <!-- 회원탈퇴 -->
   <delete id="deleteCustomer" parameterType="String">
      DELETE FROM mvc_customer_tbl WHERE id=#{strId}
   </delete>
   
   <!-- 회원정보 상세페이지 -->
   <select id="getCustomerDetail" parameterType="String" resultType="spring.mvc.pj_126_chs.dto.CustomerDTO">
      SELECT * FROM mvc_customer_tbl WHERE id=#{strId}
   </select>
   
   <!-- 회원수정처리 -->
   <update id="updateCustomer" parameterType="spring.mvc.pj_126_chs.dto.CustomerDTO">
      UPDATE mvc_customer_tbl
         SET password=#{password}, name=#{name}, birthday=#{birthday}, address=#{address}, hp=#{hp}, email=#{email}, regDate=#{regDate}
       WHERE id=#{id}
   </update>
   
   <!-- 카트상품 확인후 담기 -->
   <select id="productConfirm" parameterType="int" resultType="spring.mvc.pj_126_chs.dto.CartDTO">
   		SELECT * FROM mvc_product_tbl WHERE pdNo = #{pdNo}
   </select>
   
   <!-- 카트추가 -->
   <insert id="cartAdd" parameterType="spring.mvc.pj_126_chs.dto.CartDTO">
   		INSERT INTO mvc_cart_tbl(cartNo,id,pdNo,pdName,pdBrand,pdImg,pdCategory,pdContent,pdPrice,pdStatus,pdQuantity) 
           VALUES ((SELECT NVL(MAX(cartNo)+1,1) FROM mvc_cart_tbl),#{id},#{pdNo},#{pdName},#{pdBrand},#{pdImg},#{pdCategory},#{pdContent},#{pdPrice},#{pdStatus},#{pdQuantity})
   </insert>
   
   <!-- 카트 목록 -->
   <select id="cartList" parameterType="String" resultType="spring.mvc.pj_126_chs.dto.CartDTO">
   		SELECT * FROM mvc_cart_tbl  
	     WHERE id = #{id} 
	     ORDER BY cartNo DESC 
   </select>
   
   <delete id="cartDelete" parameterType="int">
   		DELETE mvc_cart_tbl WHERE cartNo=#{cartNo}
   </delete>
   
   <!-- 고객용 회원정보 -->
   <select id="customerInfo" parameterType="String" resultType="spring.mvc.pj_126_chs.dto.CustomerDTO">
   		SELECT * FROM mvc_customer_tbl WHERE id =#{id}
   </select>
   
   <!-- 관리자용 회원정보 -->
   <select id="adminCustomerInfo" resultType="spring.mvc.pj_126_chs.dto.CustomerDTO">
   		SELECT * FROM mvc_customer_tbl
   </select>
   
   <!-- 구매확인(바로) -->
   <select id="shopConfirm" parameterType="int" resultType="spring.mvc.pj_126_chs.dto.BuyDTO">
   		SELECT * FROM mvc_product_tbl WHERE pdNo = #{pdNo}
   </select>
   
   
   <!-- 상품구매(바로구매) -->
   <insert id="buy" parameterType="spring.mvc.pj_126_chs.dto.BuyDTO">
   		INSERT INTO mvc_buy_tbl(shopNo,id,pdNo,pdName,pdBrand,pdPrice,buyQuantity,deliverySt,orderDate)
          VALUES ((SELECT NVL(MAX(shopNo)+1,1) FROM mvc_buy_tbl),#{id},#{pdNo},#{pdName},#{pdBrand},#{pdPrice},#{buyQuantity},'주문완료',sysdate)
   </insert>
   
   <!-- 장바구니구매  -->
   <insert id="buyCart" parameterType="java.util.Map" >
   		INSERT INTO mvc_buy_tbl(shopNo, id, pdNo, pdName, pdBrand, pdPrice, buyQuantity, deliverySt, orderDate) 
          	VALUES ((SELECT NVL(MAX(shopNo)+1,1) FROM mvc_buy_tbl),  
            	 	(SELECT DISTINCT id FROM mvc_cart_tbl WHERE id = #{strId}),  
            		(SELECT pdNo FROM mvc_cart_tbl WHERE cartNo = #{cartNo} ),  
            		(SELECT pdName FROM mvc_cart_tbl WHERE cartNo = #{cartNo} ),  
            		(SELECT pdBrand FROM mvc_cart_tbl WHERE cartNo = #{cartNo} ), 
            		(SELECT pdPrice FROM mvc_cart_tbl WHERE cartNo = #{cartNo} ), 
            		(SELECT pdQuantity FROM mvc_cart_tbl WHERE cartNo = #{cartNo} ), 
            		'주문완료', 
            		sysdate )
   </insert>
   
   <!-- 나의 쇼핑정보 -->
   <select id="myOrder" parameterType="String" resultType="spring.mvc.pj_126_chs.dto.BuyDTO">
   		SELECT * FROM mvc_buy_tbl WHERE id=#{id} ORDER BY shopNo DESC
   </select>
   
   <!-- 구매취소(환불요청) -->
   <update id="refund" parameterType="int">
   		UPDATE mvc_buy_tbl SET deliverySt= '주문취소'
   		 WHERE shopNo= #{shopNo}
   </update>
   
   <!-- 주문목록 -->
   <select id="orderList" resultType="spring.mvc.pj_126_chs.dto.BuyDTO">
   		SELECT * FROM mvc_buy_tbl ORDER BY shopNo DESC
   </select>
   
   <!-- 주문승인 -->
   <insert id="orderConfirm" parameterType="int">
   		INSERT INTO mvc_order_tbl (shopNo, id, pdNo, pdName, pdBrand, salePrice, buyQuantity, deliverySt, orderDate) 
           		VALUES( 
           		#{shopNo},
           		(SELECT id FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
           		(SELECT pdNo FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
           		(SELECT pdName FROM mvc_buy_tbl WHERE shopNo=#{shopNo}),  
           		(SELECT pdBrand FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
           		(SELECT pdPrice * buyQuantity FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
           		(SELECT buyQuantity FROM mvc_buy_tbl WHERE shopNo=#{shopNo}),  
           		('배송준비중'), 
           		(SYSDATE))
   </insert>
   
   <!-- 결산승인 -->
   <insert id="saleConfirm" parameterType="int">
   		INSERT INTO mvc_sale_tbl (id, pdNo, pdName, saleAmount, saleTotal, shopNo)  
        	VALUES( 
         	(SELECT id FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
         	(SELECT pdNo FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
         	(SELECT pdName FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
         	(SELECT buyQuantity FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
         	(SELECT pdPrice * buyQuantity FROM mvc_buy_tbl WHERE shopNo=#{shopNo}), 
         	#{shopNo})
   </insert>
   
   <!-- 주문취소 -->
   <delete id="orderCancel" parameterType="int">
   		DELETE mvc_buy_tbl WHERE shopNo=#{shopNo}
   </delete>
   
   <!-- 주문승인목록 -->
   <select id="orderConfirmList" resultType="spring.mvc.pj_126_chs.dto.OrderDTO">
   		SELECT * FROM mvc_order_tbl ORDER BY id DESC
   </select>
   
   <!-- 결산 -->
   <select id="sale" resultType="spring.mvc.pj_126_chs.dto.SaleDTO">
   		SELECT pdName  	
			  ,sum(saleTotal) AS saleTotal
		  FROM mvc_sale_tbl
		GROUP BY pdName
   </select>
   
   <!-- 결산취소 -->
   <delete id="saleRefund" parameterType="int">
   		DELETE mvc_sale_tbl WHERE shopNo=#{shopNo}
   </delete>
   
   <!-- 주문 승인 취소 -->
   <delete id="orderConfirmCancel" parameterType="int">
   		DELETE mvc_order_tbl WHERE shopNo=#{shopNo}
   </delete>
   
   <!-- 검색 -->
   <select id="searchList" parameterType="String" resultType="spring.mvc.pj_126_chs.dto.ProductDTO">
   		 SELECT * FROM mvc_product_tbl WHERE pdName LIKE '%' || #{pdName} || '%'
   </select>
   
   
</mapper>     